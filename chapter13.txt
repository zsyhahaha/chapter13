十三章总结：
1.继承的方式：public，protected，private
	1)继承方式是继承下来的成员访问权限的上限；
	2)多重继承下，派生类的继承方式看直接继承的基类；
	3)外部只能访问对象public成员，protected和private的成员无法直接访问。
	4)在继承结构中，派生类从基类可以继承过来private成员，但是派生类却无法直接访问
	5)默认的继承方式：class定义派生类，默认继承方式是private；struct定义派生类默认继承方式是public
2.基类对象和派生类对象的转换：
	派生类对象可以转换成基类，类型从下到上的转换；
	基类对象不能转换成派生类；
	基类指针可以指向派生类对象，类型从下到上的转换，但是该指针只能访问到基类囊括的成员；
	派生类指针不能指向基类对象。
3.虚析构函数：
	如果使用基类指针指向派生类，在delete时，只会调用基类的析构函数，而派生类析构函数没有调用，这样做会导致内存泄漏
	解决方法：基类使用虚析构函数virtual ~Base（）
4.虚函数的工作原理：
	每个虚函数都会有一个与之对应的虚函数表，该虚函数表的实质是一个指针数组，存放的是每一个对象的虚函数入口地址。对于一个派生类来说，他会继承基类的虚函数表同时增加自己的虚函数入口地址，如果派生类重写了基类的虚函数的话，那么继承过来的虚函数入口地址将被派生类的重写虚函数入口地址替代。那么在程序运行时会发生动态绑定，将父类指针绑定到实例化的对象实现多态。